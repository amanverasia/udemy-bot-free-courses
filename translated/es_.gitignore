# Creado por .ignore plugin de soporte (hsz.mobi)
### Plantilla JetBrains
# Identificadores JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio, WebStorm y Rider
# Referencia: https://intellij-support.jetbrains.com/hc/es-us/articles/206544839

# Objetos específicos del usuario
.idea/**/workspace.xml
.idea/**/tasks.xml
.idea/**/usage.estadísticas.xml
.idea/**/diccionarios
.idea/**/shelf

# Archivos generados
.idea/**/contentModel.xml

# Archivos sensibles o de alto estribillo
.idea/**/dataources/
.idea/**/dataources.ids
.idea/**/dataources.local.xml
.idea/**/sqlDataSources.xml
.idea/**/dynamic.xml
.idea/**/uiDesigner.xml
.idea/**/dbnavigator.xml

# Gradle
.idea/**/gradle.xml
.idea/**/librerías

# Gradle y Maven con importación automática
# Al usar Gradle o Maven con importación automática, debería excluir los archivos del módulo,
# ya que serán recreadas, y pueden causar estragos.  Descomentar si usas
# autoimportar.
# .idea/artefactos
# .idea/compiler.xml
# .idea/jarRepositories.xml
# .idea/modules.xml
# .idea/*.iml
# .idea/módulos
# *.iml
# *.ipr

# CMake
cmake-build-*/

# plugin de Explorador de Mongo
.idea/**/mongoSettings.xml

# Formato de proyecto basado en archivos
*.iws

# IntelliJ
fuera/

# plugin mpeltonen/sbt-idea
módulos/

# JIRA plugin
atlassian-ide-plugin.xml

# Plugin Cursive Clojure
.idea/replstate.xml

# Plugin Crashlytics (para Android Studio e IntelliJ)
com_crashlytics_export_strings.xml
crashlytics.properties
crashlytics-build.properties
tejedor.propiedades

# Cliente de reposo basado en el editor
.idea/httpRequests

# Android studio 3.1+ archivo de caché serializado
.idea/caches/build_file_checksums.ser

### Python template
# Archivos Byte-compilados / optimizados / DLL
__pycache__/
*.py[cod]
*$py.class

# Extensiones C
*.so

# Distribución / Embalaje
.Python
construcción/
desarrollar-huevos/
distante /
descargas/
huevos/
.eggs/
lib/
lib64/
partes/
sdist/
var/
ruedas/
compartir/pithon-ruedas/
*.egg-info/
.instalado.cfg
*.egg
MANIFICAR

# PyInstaller
# Generalmente estos archivos son escritos por un script python desde una plantilla
# antes de PyInstaller construye el exe, para inyectar datos/otra información en él.
*.manifiesto
*.spec

# Registros del instalador
pip-log.txt
pip-eliminar-este-directory.txt

# Unidades de informes de prueba / cobertura
htmlcov/
.tox/
.nox/
.cobertura
.cobertura.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py, cubierta
.hypothesis/
.pytest_caché/
cubierta/

# Traducciones
*.mes
*.pot

# cosas de Django:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Objetos de frasco:
instancia/
.webassets-cache

# Objetos Scr:
.arañazos

# documentación de Sphinx
docs/_build/

# PyBuilder
.pybuilder/
target/

# Cuaderno de Jupyter
puntos de control

# IPython
profile_default/
ipython_config.py

# pyenv
# Para una biblioteca o paquete, puede querer ignorar estos archivos ya que el código es
# destinado a correr en múltiples entornos; de lo contrario, compruébelos en:
# .python-version

# pipenv
# De acuerdo con pypa/pipenv#598, se recomienda incluir Pipfile.lock en el control de versiones.
# Sin embargo, en caso de colaboración, si tiene dependencias o dependencias específicas de la plataforma
# sin soporte multiplataforma, pipenv puede instalar dependencias que no funcionan, o no
# instalar todas las dependencias necesarias.
#Pipfile.lock

# PEP 582; usado por ej. github.com/David-OConnor/pyflow
__pypackages__/

# Objetos del apio
programación-acelerador
celerybeat.pid

# Archivos analizados de SageMath
*.sage.py

# Entornos
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Configuración del proyecto Spyder
.spyderproject
.proyecto espía

# Configuración del proyecto cuerda
.ropeproject

# documentación de mkdocs
/sitio

# miope
.mypy_caché/
.dmypy.json
dmypy.json

Comprobador de tipo Pyre
.pyre/

# analizador de tipos estáticos pytype
.pytype/

# Cython debug symbols
cython_debug/

.idea/.gitignore
.idea/Automatic-Udemy Course-Enroller-GET-PAID-UDEMY-CURSES-for-FREE.iml
.idea/perfiles de inspección/
.idea/misc.xml
.idea/modules.xml
.idea/vcs.xml
Pipfile
Pipfile.lock


settings.yaml

pyproject.toml
